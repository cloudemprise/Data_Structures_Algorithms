
110. Balanced Binary Tree - Easy

Given a binary tree, determine if it is "height-balanced".  Where a
"height-balanced" binary tree is a binary tree in which the depth of the
two subtrees of every node never differs by more than one.

A "height-balanced" binary tree is a binary tree in which the height of the
left subtree and right subtree of any node does not differ by more than 1 and
both the left and right subtree are also height balanced.


Example 1:

Input: root = [3,9,20,null,null,15,7]
Output: true

Example 2:

Input: root = [1,2,2,3,3,null,null,4,4]
Output: false

Example 3:

Input: root = []
Output: true


Constraints:

    The number of nodes in the tree is in the range [0, 5000].
    -104 <= Node.val <= 104



https://www.geeksforgeeks.org/how-to-determine-if-a-binary-tree-is-balanced/

Naive Approach: To check if a tree is height-balanced:

Get the height of left and right subtrees using dfs traversal. Return true if
the difference between heights is not more than 1 and left and right subtrees
are balanced, otherwise return false.
